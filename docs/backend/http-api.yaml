openapi: "3.1.0"
info:
  title: Api documentation
  version: 0.1.0
paths:
  /player:
    post:
      operationId: CreatePlayer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
            example:
              player:
                name: Player0
                email: player0@gmail.com
      responses:
        '200':
          description: Player created with success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              value:
                message: "Player created: $pid"
        '400':
          description: Player creation fails because email is invalid
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              value:
                typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/invalid-email
                title: "Invalid email"
                status: 400
                detail: "Email is invalid"
                instance: http://localhost:1904/api/player
        '409':
          description: Player creation fails because email already exists
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              value:
                typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/email-already-exists
                title: "Email already exists"
                status: 409
                detail: "Player with given email $email already exists"
                instance: http://localhost:1904/api/player
  /player/{pid}:
    get:
      operationId: GetDetailsPlayer
      security:
        - bearerAuth: [ ]
      parameters:
        - name: pid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: The player details
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  email:
                    type: string
              value:
                name: Player0
                email: player0@gmail.com
        '404':
          description: Player not found
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              value:
                typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/player-not-found
                title: "Player not found"
                status: 404
                detail: "Player with given id: $id not found"
                instance: http://localhost:1904/api/player/{pid}
  /game:
    get:
      operationId: GetGames
      parameters:
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: skip
          in: query
          required: false
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                genres:
                  type: array
                  items:
                    type: string
                developer:
                  type: string
            example:
              body:
                value:
                  genres: [ "Adventure", "Rpg" ]
                  developer: "Developer0"
      responses:
        '200':
          description: Games filtered by genres and developer succeeds
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    developer:
                      type: string
                    genres:
                      type: array
                      items:
                        type: string
              examples:
                found:
                  value:
                    games: [ { name: "game1",
                               developer: "developer0",
                               genres: [ "Adventure", "Rpg", "Action" ] },
                      { name: "game2",
                        developer: "developer0",
                        genres: [ "Adventure", "Rpg" ] } ]
                notFound:
                  value:
                    games: [ ]
        '404':
          description: genres or developer not found
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              examples:
                genres-not-found:
                  value:
                    typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/genre-not-found
                    title: "Genre not found"
                    status: 404
                    detail: "Genre or genres not found"
                    instance: http://localhost:1904/api/game
                developer-not-found:
                  value:
                    typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/developer-not-found
                    title: "Developer not found"
                    status: 404
                    detail: "Developer not found"
                    instance: http://localhost:1904/api/game
        '400':
          description: Bad request for invalid parameters or invalid request body
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              examples:
                invalid-arguments-skip-or-limit:
                  value:
                    typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/invalid-skip-or-limit
                    title: "Invalid skip or limit"
                    status: 400
                    detail: "Invalid skip or limit"
                    instance: http://localhost:1904/api/game
                invalid-request-body-arguments-missing:
                  value:
                    typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/genres-or-developer-missing
                    title: "Genres or developer is empty"
                    status: 400
                    detail: "Genres or developer is empty"
                    instance: http://localhost:1904/api/game
    post:
      operationId: CreateGame
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                developer:
                  type: string
                genres:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Game created with success
          headers:
            location:
              schema:
                type: string
              value: "game/$gameId"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              value:
                message: "Game id: $gameId"
        '400':
          description: Game creation fails because of invalid data
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              value:
                typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/invalid-game-data
                title: "Invalid game data"
                status: 400
                detail: "Invalid game data"
                instance: http://localhost:1904/api/game
        '404':
          description: Game creation fails because genre not found
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              value:
                typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/genre-not-found
                title: "Genre not found"
                status: 404
                detail: "Genre or genres not found"
                instance: http://localhost:1904/api/game
        '409':
          description: Game creation fails because name already exists
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              value:
                typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/game-name-already-exists
                title: "Game name already exists"
                status: 409
                detail: "Game with given name $name already exists"
                instance: http://localhost:1904/api/game
  /game/{gid}:
    get:
      operationId: GetGameById
      parameters:
        - name: gid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Game information
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                  developer:
                    type: string
                  genres:
                    type: array
                    items:
                      type: string
              example:
                value:
                  name: "game1"
                  developer: "developer0"
                  genres: [ "Adventure", "Rpg", "Action" ]
        '400':
          description: Get game fails because of invalid parameter
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              value:
                typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/invalid-request
                title: "Invalid request"
                status: 400
                detail: "Invalid parameters"
                instance: http://localhost:1904/api/game/{gid}
        '404':
          description: Game not found
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              value:
                typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/game-not-found
                title: "Game not found"
                status: 404
                detail: "Game with given id not found"
                instance: http://localhost:1904/api/game{gid}
  /sessions:
    get:
      operationId: GetSessions
      parameters:
        - name: gid
          in: query
          required: true
          schema:
            type: integer
        - name: date
          in: query
          required: true
          schema:
            type: integer
        - name: state
          in: query
          required: true
          schema:
            type: integer
        - name: pid
          in: query
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: skip
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Sessions filtered by game, date, state and player succeeds
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    sid:
                      type: integer
                    numberOfPlayers:
                      type: integer
                    date:
                      type: string
                    gid:
                      type: integer
                    associatedPlayers:
                      type: array
                    items:
                      type: object
                    properties:
                      name:
                        type: string
                      email:
                      type: string
                    capacity: integer,
              example:
                sessions:
                  value: [ { sid: 1,
                             numPlayers: 2,
                             sessionDate: "2024-03-250T18:43",
                             gid: 2,
                             players": [ { name: "Player0",
                                           email: "player0@gmail.com" },
                               { name: "Player1",
                                 email: "player1@gmail.com" } ] },
                    { sid: 2,
                      numPlayers: 1,
                      sessionDate: "2024-03-250T18:43",
                      gid: 2,
                      players": [ { name: "Player0",
                                    email: "player0@gmail.com" } ] } ]
        '400':
          description: Bad request for invalid parameters
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              examples:
                invalid-date:
                  value:
                    typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/invalid-date
                    title: "Invalid date"
                    status: 400
                    detail: "Date is invalid"
                    instance: http://localhost:1904/api/session
                invalid-state:
                  value:
                    typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/invalid-state
                    title: "Invalid request"
                    status: 400
                    detail: "Invalid parameters"
                    instance: http://localhost:1904/api/session
        '404':
          description: Given game or player not found
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              examples:
                game-not-found:
                  value:
                    typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/game-not-found
                    title: "Game not found"
                    status: 404
                    detail: "Game with given id not found"
                    instance: http://localhost:1904/api/sessions
                player-not-found:
                  value:
                    typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/player-not-found
                    title: "Player not found"
                    status: 404
                    detail: "Player with given id not found"
                    instance: http://localhost:1904/api/sessions
    post:
      operationId: CreateSession
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gid:
                  type: integer
                date:
                  type: string
                capacity:
                  type: integer
            example:
              session:
                gid: 1
                date: "2024-03-250T18:43"
                capacity: 10
      responses:
        '200':
          description: Session created with success
          headers:
            location:
              schema:
                type: string
              value: "session/$sessionId"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              value:
                message: "Session created: $sessionId"
        '400':
          description: Bad request for invalid request body
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              examples:
                invalid-date:
                  value:
                    typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/invalid-date
                    title: "Invalid date"
                    status: 400
                    detail: "Date is invalid"
                    instance: http://localhost:1904/api/session
                invalid-capacity:
                  value:
                    typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/invalid-capacity
                    title: "Invalid capacity"
                    status: 400
                    detail: "Capacity is invalid"
                    instance: http://localhost:1904/api/session
        '404':
          description: Session creation fails because game not found
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              value:
                typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/game-not-found
                title: "Game not found"
                status: 404
                detail: "Game with given id not found"
                instance: http://localhost:1904/api/sessions
  /sessions/{sid}:
    get:
      operationId: GetSessionById
      parameters:
        - name: sid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Session information
          content:
            application/json:
              schema:
                type: object
                properties:
                  sid:
                    type: integer
                  numberOfPlayers:
                    type: integer
                  date:
                    type: string
                  gid:
                    type: integer
                  associatedPlayers:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        email:
                          type: string
                  capacity: integer,
              example:
                value:
                  sid: 1
                  numPlayers: 2
                  sessionDate: "2024-03-250T18:43"
                  gid: 2
                  players": [ { name: "Player0",
                                email: "player0@gmail.com" },
                    { name: "Player1",
                      email: "player1@gmail.com" } ]
        '400':
          description: Get game fails because of invalid parameter
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              value:
                typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/invalid-request
                title: "Invalid request"
                status: 400
                detail: "Invalid parameters"
                instance: http://localhost:1904/api/session/{sid}
        '404':
          description: Game not found
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              value:
                typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/session-not-found
                title: "Session not found"
                status: 404
                detail: "Session with given id not found"
                instance: http://localhost:1904/api/session{sid}
    put:
      operationId: UpdateSession
      security:
        - bearerAuth: [ ]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                capacity:
                  type: integer
                date:
                  type: string
            example:
              changes:
                capacity: 10
                date: "2025-03-250T18:43"
      responses:
        '204':
          description: Session updated with success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                value:
                  message: "Session updated 1"
        '400':
          description: Bad request for invalid request body
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?

                examples:
                  session-not-found:
                    value:
                      typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/session-not-found
                      title: "Session not found"
                      status: 404
                      detail: "Session with given id not found"
                      instance: http://localhost:1904/api/sessions/{sid}
                  invalid-date:
                    value:
                      typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/invalid-date
                      title: "Invalid date"
                      status: 400
                      detail: "Date is invalid"
                      instance: http://localhost:1904/api/sessions/{sid}
                  invalid-capacity:
                    value:
                      typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/invalid-capacity
                      title: "Invalid capacity"
                      status: 400
                      detail: "Capacity is invalid"
                      instance: http://localhost:1904/api/sessions/{sid}
        '404':
          description: Session not found
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              examples:
                session-not-found:
                  value:
                    typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/session-not-found
                    title: "Session not found"
                    status: 404
                    detail: "Session with given id not found"
                    instance: http://localhost:1904/api/sessions/{sid}
    delete:
      operationId: DeleteSession
      security:
        - bearerAuth: [ ]
      responses:
        '204':
          description: Session deleted with success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                value:
                  message: "Session deleted"
        '404':
          description: Session not found
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              value:
                typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/session-not-found
                title: "Session not found"
                status: 404
                detail: "Session with given id not found"
                instance: http://localhost:1904/api/sessions/{sid}/player/{pid}
  /sessions/{sid}/player/{pid}:
    put:
      operationId: AddPlayerToSession
      security:
        - bearerAuth: [ ]
      parameters:
        - name: sid
          in: path
          required: true
          schema:
            type: integer
        - name: pid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Player added with success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              value:
                message: "Player added to session"
        404:
          description: Player not added because session not found or player not found
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              examples:
                session-not-found:
                  value:
                    typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/session-not-found
                    title: "Session not found"
                    status: 404
                    detail: "Session with given id not found"
                    instance: http://localhost:1904/api/sessions/{sid}/player/{pid}
                player-not-found:
                  value:
                    typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/player-not-found
                    title: "Player not found"
                    status: 404
                    detail: "Player with given id not found"
                    instance: http://localhost:1904/api/sessions/{sid}/player/{pid}
        '409':
          description: Player not added because session is full or player already in session
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              examples:
                session-is-full:
                  value:
                    typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/session-is-full
                    title: "Session is full"
                    status: 409
                    detail: "Session is full"
                    instance: http://localhost:1904/api/sessions/{sid}/player/{pid}
                player-already-in-session:
                  value:
                    typeUri: https://github.com/isel-leic-ls/2324-2-LEIC42D-G04/tree/main/docs/problems/player-already-in-session
                    title: "Player already in session"
                    status: 409
                    detail: "Player is already in session"
                    instance: http://localhost:1904/api/sessions/{sid}/player/{pid}
    delete:
      operationId: DeletePlayerFromSession
      security:
        - bearerAuth: [ ]
      parameters:
        - name: sid
          in: path
          required: true
          schema:
            type: integer
        - name: pid
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Player removed with success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              value:
                message: "Player removed from session"
        '404':
          description: Player not removed because session not found or player not found
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              examples:
                session-not-found:
                  value:
                    typeUri: ""
                    title: "Session not found"
                    status: 404
                    detail: "Session with given id not found"
                    instance: http://localhost:1904/api/sessions/{sid}/player/{pid}
                player-not-found:
                  value:
                    typeUri: ""
                    title: "Player not found"
                    status: 404
                    detail: "Player with given id not found"
                    instance: http://localhost:1904/api/sessions/{sid}/player/{pid}
        '409':
          description: Player not removed because player not in session
          content:
            application/json+problem:
              schema:
                type: object
                properties:
                  typeUri:
                    type: Uri
                  title:
                    type: string
                  status:
                    type: integer
                  detail:
                    type: string
                  instance:
                    type: Uri?
              examples:
                player-not-in-session:
                  value:
                    typeUri: ""
                    title: "Player not in session"
                    status: 409
                    detail: "Player is not in session"
                    instance: http://localhost:1904/api/sessions/{sid}/player/{pid}



components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: jwt
      description: 'note: non-oauth scopes are not defined at the securityScheme level'